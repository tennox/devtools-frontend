name: "Build"
on:
  pull_request:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: workflow/nix-shell-action@v3.0.2 # https://github.com/marketplace/actions/nix-shell
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
        packages: gn,findutils,xz,tree
        # Disclaimer: wow I really have no idea what's happening with this gn and gclient thing
        script: |
          set -x || true
          GIT_ROOT=$(pwd)
          cd /tmp
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git ./depot_tools
          export PATH=$(realpath ./depot_tools):$PATH
          gclient root
          gclient config --spec 'solutions = [
            {
              "name": "devtools-frontend",
              "url": "https://chromium.googlesource.com/devtools/devtools-frontend.git",
              "deps_file": "DEPS",
              "managed": False,
              "custom_deps": {},
            },
          ]
          '
          git clone $GIT_ROOT devtools-frontend/
          cd devtools-frontend/
          gclient sync || true
          gn gen out/build --args='devtools_skip_typecheck=true'
          autoninja -C out/build/
          pwd
          tree out/build/
          mv out/build/gen/front_end devtools-frontend
          zip -r release.zip devtools-frontend/

    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release
    #     path: /tmp/devtools-frontend/release.zip

    # https://stackoverflow.com/a/59819441/1633985
    - name: Make short sha
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Print short sha
      run: echo ${{ steps.vars.outputs.sha_short }}

    - name: Upload Release
      # if: always()
      uses: ncipollo/release-action@v1.10.0 # https://github.com/marketplace/actions/create-release
      with:
        artifacts: "/tmp/devtools-frontend/*.zip"
        omitBody: true
        prerelease: true
        tag: ${{ steps.vars.outputs.sha_short }}
        body: ${{ github.event.pull_request.head.sha }}
        token: ${{ secrets.GITHUB_TOKEN }}
